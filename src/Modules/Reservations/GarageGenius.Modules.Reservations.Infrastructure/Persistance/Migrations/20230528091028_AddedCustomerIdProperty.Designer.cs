// <auto-generated />
using System;
using GarageGenius.Modules.Reservations.Infrastructure.Persistance.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GarageGenius.Modules.Reservations.Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(ReservationsDbContext))]
    [Migration("20230528091028_AddedCustomerIdProperty")]
    partial class AddedCustomerIdProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("reservations")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GarageGenius.Modules.Reservations.Core.ReservationHistories.Entities.ReservationHistory", b =>
                {
                    b.Property<Guid>("ReservationHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReservationState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationHistoryId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationHistories", "reservations");
                });

            modelBuilder.Entity("GarageGenius.Modules.Reservations.Core.Reservations.Entities.Reservation", b =>
                {
                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ReservationDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReservationNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReservationState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReservationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Reservations", "reservations");
                });

            modelBuilder.Entity("GarageGenius.Modules.Reservations.Core.ReservationHistories.Entities.ReservationHistory", b =>
                {
                    b.HasOne("GarageGenius.Modules.Reservations.Core.Reservations.Entities.Reservation", null)
                        .WithMany("ReservationHistories")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GarageGenius.Modules.Reservations.Core.Reservations.Entities.Reservation", b =>
                {
                    b.Navigation("ReservationHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
